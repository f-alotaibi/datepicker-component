function isEqualToDate(t,e){return t.getDate()===e.getDate()&&t.getMonth()===e.getMonth()&&t.getFullYear()===e.getFullYear()}function format(t,e){return day=t.toLocaleString("en-US",{weekday:"long"}),dayNumber=t.getDate(),dayShort=t.toLocaleString("en-US",{weekday:"short"}),year=t.getFullYear(),yearShort=t.toLocaleString("en-US",{year:"2-digit"}),month=t.toLocaleString("en-US",{month:"long"}),monthShort=t.toLocaleString("en-US",{month:"short"}),monthNumber=t.getMonth()+1,e.replace(/\bYYYY\b/,year).replace(/\bYYY\b/,yearShort).replace(/\bDDDD\b/,day).replace(/\bDDD\b/,dayShort).replace(/\bDD\b/,dayNumber.toString().padStart(2,"0")).replace(/\bD\b/,t).replace(/\bMMMM\b/,month).replace(/\bMMM\b/,monthShort).replace(/\bMM\b/,monthNumber.toString().padStart(2,"0")).replace(/\bM\b/,monthNumber)}class Calendar{constructor(t,e){this.currentYear=t,this.currentMonth=e}getDay(t){return new Date(this.currentYear,this.currentMonth,t)}getPreviousMonth(){return 0===this.currentMonth?new Date(this.currentYear-1,11):new Date(this.currentYear,this.currentMonth-1)}getNextMonth(){return 11===this.currentMonth?new Date(this.currentYear+1,0):new Date(this.currentYear,this.currentMonth+1)}goToDate(t,e){this.currentMonth=t,this.currentYear=e}goToNextYear(){this.currentYear+=1,this.currentMonth=0}goToPreviousYear(){this.currentYear-=1,this.currentMonth=11}goToNextMonth(){if(11===this.currentMonth)return this.goToNextYear();this.currentMonth+=1}goToPreviousMonth(){if(0===this.currentMonth)return this.goToPreviousYear();this.currentMonth-=1}}class DatePicker extends HTMLElement{format="MMM DD, YYYY";position="bottom";visible=!1;date=null;mounted=!1;toggleButton=null;calendarDropDown=null;calendarDateElement=null;calendarDaysContainer=null;selectedDayElement=null;endDate=null;startDate=null;disableWeekDays=null;constructor(){super(),this.shadow=this.attachShadow({mode:"open"}),this.format=this.getAttribute("format")||this.format,this.position=DatePicker.position.includes(this.getAttribute("position"))?this.getAttribute("position"):this.position,this.visible=""===this.getAttribute("visible")||"true"===this.getAttribute("visible")||this.visible,this.startDate=this.getAttribute("begin-date")?new Date(this.getAttribute("begin-date")):null,this.endDate=this.getAttribute("end-date")?new Date(this.getAttribute("end-date")):null;let t=this.getAttribute("week-days-disabled")?this.getAttribute("week-days-disabled").split(", "):null;this.disableWeekDays=Array.from({length:t?t.length:0});for(let e=0;e<this.disableWeekDays.length;e++)this.disableWeekDays[e]=parseInt(t[e]);let e=new Date(this.date??(this.getAttribute("date")||Date.now()));this.startDate&&e<this.startDate?e=this.startDate:this.endDate&&this.date>this.endDate&&(e=this.endDate),this.date=e,this.calendar=new Calendar(e.getFullYear(),e.getMonth()),this.setAttribute("value",this.calendar.getDay(this.date.getDate()).getTime()),this.render()}connectedCallback(){this.mounted=!0,this.toggleButton=this.shadow.querySelector(".date-toggle"),this.calendarDropDown=this.shadow.querySelector(".calendar-dropdown");const[t,e,a]=this.calendarDropDown.querySelector(".header").children;this.calendarDateElement=e,this.calendarDaysContainer=this.calendarDropDown.querySelector(".month-days"),this.toggleButton.addEventListener("click",(()=>this.toggleCalendar())),t.addEventListener("click",(()=>this.prevMonth())),a.addEventListener("click",(()=>this.nextMonth())),document.addEventListener("click",(t=>this.handleClickOut(t))),this.renderCalendarDays()}attributeChangedCallback(t,e,a){if(this.mounted)switch(t){case"date":this.date=new Date(a),this.calendar.goToDate(this.date.monthNumber,this.date.year),this.renderCalendarDays(),this.updateToggleText();break;case"format":this.format=a,this.updateToggleText();break;case"visible":this.visible=["","true","false"].includes(a)?""===a||"true"===a:this.visible,this.toggleCalendar(this.visible);break;case"position":this.position=DatePicker.position.includes(a)?a:this.position,this.calendarDropDown.className=`calendar-dropdown ${this.visible?"visible":""} ${this.position}`}}toggleCalendar(t=null){null===t?this.calendarDropDown.classList.toggle("visible"):t?this.calendarDropDown.classList.add("visible"):this.calendarDropDown.classList.remove("visible"),this.visible=this.calendarDropDown.className.includes("visible"),this.visible?this.calendarDateElement.focus():(this.toggleButton.focus(),this.isCurrentCalendarMonth()||(this.calendar.goToDate(this.date.getMonth(),this.date.getFullYear()),this.renderCalendarDays()))}prevMonth(){this.calendar.goToPreviousMonth(),this.renderCalendarDays()}nextMonth(){this.calendar.goToNextMonth(),this.renderCalendarDays()}updateHeaderText(){this.startDate&&new Date(this.calendar.currentYear,this.calendar.currentMonth,0)<this.startDate?this.shadow.querySelector(".month-navigator-prev").disabled=!0:this.shadow.querySelector(".month-navigator-prev").disabled=!1,this.endDate&&new Date(this.calendar.currentYear,this.calendar.currentMonth+1,1)>this.endDate?this.shadow.querySelector(".month-navigator-next").disabled=!0:this.shadow.querySelector(".month-navigator-next").disabled=!1;const t=format(this.calendar.getDay(1),"MMMM, YYYY");this.calendarDateElement.textContent=t,this.calendarDateElement.setAttribute("aria-label",`current month ${t}`)}isCurrentCalendarMonth(){return this.calendar.currentMonth===this.date.getMonth()&&this.calendar.currentYear===this.date.getFullYear()}selectDay(t,e){isEqualToDate(e,this.date)||(this.date=e,e.monthNumber!==this.calendar.currentMonth.number?this.prevMonth():(t.classList.add("selected"),this.selectedDayElement.classList.remove("selected"),this.selectedDayElement=t),this.setAttribute("value",e.getTime()),this.toggleCalendar(),this.updateToggleText(),this.updateHeaderText(),this.updateMonthDays())}handleClickOut(t){this.visible&&this!==t.target&&this.toggleCalendar(!1)}getMonthDaysGrid(){const t=this.calendar.getDay(1).getDay(),e=new Date(this.calendar.currentYear,this.calendar.currentMonth+1,0).getDate()+t,a=Array.from({length:e});for(let e=0;e<t;e++)a[t-e-1]=this.calendar.getDay(-e);for(let n=0;n<e-t;n++)a[n+t]=this.calendar.getDay(n+1);return a}updateToggleText(){const t=format(this.date,this.format);this.toggleButton.textContent=t}updateMonthDays(){this.calendarDaysContainer.innerHTML="",this.getMonthDaysGrid().forEach((t=>{const e=document.createElement("button");e.part="month-day",e.textContent=t.getDate(),e.addEventListener("click",(()=>this.selectDay(e,t))),e.setAttribute("aria-label",format(t,this.format)),e.setAttribute("value",t.getTime()),t.getMonth()===this.calendar.currentMonth?(e.part+=" month-day-current",isEqualToDate(this.date,t)&&(e.part+=" month-day-current-selected",this.selectedDayElement=e)):(e.part+=" month-day-noncurrent",isEqualToDate(this.date,t)&&(e.part+=" month-day-noncurrent-selected",this.selectedDayElement=e)),(this.disableWeekDays.includes(t.getDay())||this.startDate&&t<this.startDate||this.endDate&&t>this.endDate)&&(e.part+=" month-day-disabled",e.disabled=!0),this.calendarDaysContainer.appendChild(e)}))}renderCalendarDays(){this.updateHeaderText(),this.updateMonthDays(),this.calendarDateElement.focus()}static get observedAttributes(){return["date","format","visible","position"]}static get position(){return["top","left","bottom","right"]}get style(){return"\n        :host {\n          position: relative;\n        }\n        \n        .calendar-dropdown {\n            display: none;\n            position: absolute;\n        }\n\n        .calendar-dropdown.top {\n          top: auto;\n          bottom: 100%;\n          transform: translate(-50%, -8px);\n        }\n        \n        .calendar-dropdown.left {\n          top: 50%;\n          left: 0;\n          transform: translate(calc(-8px + -100%), -50%);\n        }\n        \n        .calendar-dropdown.right {\n          top: 50%;\n          left: 100%;\n          transform: translate(8px, -50%);\n        }\n        \n        .calendar-dropdown.visible {\n          display: block;\n        }\n    "}render(){const t=format(this.date,"MMMM, YYYY"),e=format(this.date,this.format);this.shadow.innerHTML=`\n        <style>${this.style}</style>\n        <button type="button" class="date-toggle" part="date-toggle">${e}</button>\n        <div part="calendar-dropdown" class="calendar-dropdown ${this.visible?"visible":""} ${this.position}">\n            <div part="header-div">\n            <div part="header" class="header">\n            <button type="button" class="month-navigator-prev" part="month-navigator" aria-label="previous month"></button>\n            <h4 tabindex="0" part="header-text" aria-label="current month ${t}">\n              ${t}\n            </h4>\n            <button type="button" class="month-navigator-next" part="month-navigator month-navigator-next" aria-label="next month"></button>\n        </div>\n        <div part="week-days">\n        <span part="week-day">Sun</span>\n        <span part="week-day">Mon</span>\n        <span part="week-day">Tue</span>\n        <span part="week-day">Wed</span>\n        <span part="week-day">Thu</span>\n        <span part="week-day">Fri</span>\n        <span part="week-day">Sat</span>\n        </div>\n            </div>\n          <div part="month-days" class="month-days"></div>\n        </div>\n      `}}customElements.define("date-picker",DatePicker);